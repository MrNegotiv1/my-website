(function() {
    'use strict';

    const encryptedCode = "(function() {
    'use strict';

    const encryptedCode = "KGZ1bmN0aW9uKCkgewogICAgJ3VzZSBzdHJpY3QnOwoKICAgIGxldCBzcGVlZCA9IDE7CgogICAgZnVuY3Rpb24gc2V0VGltZVNwZWVkKG11bHRpcGxpZXIpIHsKICAgICAgICBzcGVlZCA9IG11bHRpcGxpZXI7CiAgICB9CgoKICAgIGxldCBsYXN0UE5vdyA9IHBlcmZvcm1hbmNlLm5vdygpOwogICAgbGV0IHBOb3dPZmZzZXQgPSAwOwoKICAgIHdpbmRvdy5wZXJmb3JtYW5jZS5ub3cgPSBuZXcgUHJveHkod2luZG93LnBlcmZvcm1hbmNlLm5vdywgewogICAgICAgIGFwcGx5OiBmdW5jdGlvbih0YXJnZXQsIHRoaXNBcmcsIGFyZ0xpc3QpIHsKICAgICAgICAgICAgY29uc3QgdGltZSA9IFJlZmxlY3QuYXBwbHkodGFyZ2V0LCB0aGlzQXJnLCBhcmdMaXN0KTsKICAgICAgICAgICAgcE5vd09mZnNldCArPSAodGltZSAtIGxhc3RQTm93KSAqIChzcGVlZCAtIDEpOwogICAgICAgICAgICBsYXN0UE5vdyA9IHRpbWU7CiAgICAgICAgICAgIHJldHVybiB0aW1lICsgcE5vd09mZnNldDsKICAgICAgICB9CiAgICB9KTsKCgogICAgbGV0IGxhc3REID0gRGF0ZS5ub3coKTsKICAgIGxldCBkT2Zmc2V0ID0gMDsKCiAgICB3aW5kb3cuRGF0ZS5ub3cgPSBuZXcgUHJveHkod2luZG93LkRhdGUubm93LCB7CiAgICAgICAgYXBwbHk6IGZ1bmN0aW9uKHRhcmdldCwgdGhpc0FyZywgYXJnTGlzdCkgewogICAgICAgICAgICBjb25zdCB0aW1lID0gUmVmbGVjdC5hcHBseSh0YXJnZXQsIHRoaXNBcmcsIGFyZ0xpc3QpOwogICAgICAgICAgICBkT2Zmc2V0ICs9ICh0aW1lIC0gbGFzdEQpICogKHNwZWVkIC0gMSk7CiAgICAgICAgICAgIGxhc3REID0gdGltZTsKICAgICAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IodGltZSArIGRPZmZzZXQpOwogICAgICAgIH0KICAgIH0pOwoKCiAgICBsZXQgbGFzdFJBRiA9IHBlcmZvcm1hbmNlLm5vdygpOwogICAgbGV0IHJBRk9mZnNldCA9IDA7CgogICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSA9IG5ldyBQcm94eSh3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lLCB7CiAgICAgICAgYXBwbHk6IGZ1bmN0aW9uKHRhcmdldCwgdGhpc0FyZywgYXJnTGlzdCkgewogICAgICAgICAgICBpZiAodHlwZW9mIGFyZ0xpc3RbMF0gPT09ICJmdW5jdGlvbiIpIHsKICAgICAgICAgICAgICAgIGFyZ0xpc3RbMF0gPSBuZXcgUHJveHkoYXJnTGlzdFswXSwgewogICAgICAgICAgICAgICAgICAgIGFwcGx5OiBmdW5jdGlvbih0YXJnZXQyLCB0aGlzQXJnMiwgYXJnTGlzdDIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGltZSA9IGFyZ0xpc3QyWzBdOwogICAgICAgICAgICAgICAgICAgICAgICByQUZPZmZzZXQgKz0gKHRpbWUgLSBsYXN0UkFGKSAqIChzcGVlZCAtIDEpOwogICAgICAgICAgICAgICAgICAgICAgICBsYXN0UkFGID0gdGltZTsKICAgICAgICAgICAgICAgICAgICAgICAgYXJnTGlzdDJbMF0gPSB0aW1lICsgckFGT2Zmc2V0OwogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVmbGVjdC5hcHBseSh0YXJnZXQyLCB0aGlzQXJnMiwgYXJnTGlzdDIpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBSZWZsZWN0LmFwcGx5KHRhcmdldCwgdGhpc0FyZywgYXJnTGlzdCk7CiAgICAgICAgfQogICAgfSk7CgoKICAgIHdpbmRvdy5hdXRvRUtleSA9ICJxIjsKICAgIHdpbmRvdy51c2VSaWdodENsaWNrID0gdHJ1ZTsKICAgIHdpbmRvdy5lUGVyU2Vjb25kID0gOTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5CgogICAgbGV0IHBpY2tpbmdVcEl0ZW0gPSBmYWxzZTsKICAgIGxldCBlUHJlc3NJbnRlcnZhbDsKICAgIGxldCBlUHJlc3NDb3VudCA9IDA7CgoKICAgIGZ1bmN0aW9uIHN0YXJ0QXV0b0UoKSB7CiAgICAgICAgaWYgKCFlUHJlc3NJbnRlcnZhbCkgewogICAgICAgICAgICBlUHJlc3NJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHsKICAgICAgICAgICAgICAgIGNvbnN0IEtleUlTZG93biA9IG5ldyBLZXlib2FyZEV2ZW50KCdrZXlkb3duJywgeyBrZXk6ICdlJywga2V5Q29kZTogNjksIGNvZGU6ICdLZXlFJyB9KTsKICAgICAgICAgICAgICAgIGNvbnN0IEtleUlTdXAgPSBuZXcgS2V5Ym9hcmRFdmVudCgna2V5dXAnLCB7IGtleTogJ2UnLCBrZXlDb2RlOiA2OSwgY29kZTogJ0tleUUnIH0pOwogICAgICAgICAgICAgICAgd2luZG93LmRpc3BhdGNoRXZlbnQoS2V5SVNkb3duKTsKICAgICAgICAgICAgICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KEtleUlTdXApOwogICAgICAgICAgICAgICAgZVByZXNzQ291bnQrKzsKICAgICAgICAgICAgfSwgMCk7CiAgICAgICAgfQogICAgfQoKCiAgICBmdW5jdGlvbiBzdG9wQXV0b0UoKSB7CiAgICAgICAgY2xlYXJJbnRlcnZhbChlUHJlc3NJbnRlcnZhbCk7CiAgICAgICAgZVByZXNzSW50ZXJ2YWwgPSBudWxsOwogICAgfQoKCiAgICBsZXQgc2NyaXB0RW5hYmxlZCA9IGZhbHNlOwogICAgbGV0IG1lbnVWaXNpYmxlID0gZmFsc2U7CiAgICBjb25zdCBtZW51ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICBtZW51LnN0eWxlLnBvc2l0aW9uID0gJ2ZpeGVkJzsKICAgIG1lbnUuc3R5bGUudG9wID0gJzEwcHgnOwogICAgbWVudS5zdHlsZS5yaWdodCA9ICcxMHB4JzsKICAgIG1lbnUuc3R5bGUucGFkZGluZyA9ICcxMHB4JzsKICAgIG1lbnUuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ2JsYWNrJzsKICAgIG1lbnUuc3R5bGUuY29sb3IgPSAnd2hpdGUnOwogICAgbWVudS5zdHlsZS5ib3JkZXIgPSAnMXB4IHNvbGlkIHdoaXRlJzsKICAgIG1lbnUuc3R5bGUuYm94U2hhZG93ID0gJzAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC41KSc7CiAgICBtZW51LnN0eWxlLnpJbmRleCA9ICc5OTk5JzsKICAgIG1lbnUuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKICAgIG1lbnUuc3R5bGUuZm9udFNpemUgPSAnMTRweCc7CiAgICBtZW51LnN0eWxlLndpZHRoID0gJzE2MHB4JzsKICAgIG1lbnUuc3R5bGUudGV4dEFsaWduID0gJ2NlbnRlcic7CiAgICBtZW51LmlubmVySFRNTCA9IGAKICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tYm90dG9tOiA1cHg7Ij4KICAgICAgICAgICAgPGJ1dHRvbiBpZD0iZW5hYmxlU2NyaXB0IiBzdHlsZT0id2lkdGg6IDEwMCU7IHBhZGRpbmc6IDVweDsiPmVuYWJsZSBzY3JpcHQ8L2J1dHRvbj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tYm90dG9tOiA1cHg7Ij4KICAgICAgICAgICAgPGJ1dHRvbiBpZD0iZGlzYWJsZVNjcmlwdCIgc3R5bGU9IndpZHRoOiAxMDAlOyBwYWRkaW5nOiA1cHg7Ij5kaXNhYmxlIHNjcmlwdDwvYnV0dG9uPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxidXR0b24gaWQ9ImV4aXQiIHN0eWxlPSJjb2xvcjogd2hpdGU7IGJhY2tncm91bmQtY29sb3I6IHJlZDsgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7IHdpZHRoOiAxMDAlOyBwYWRkaW5nOiA1cHg7Ij53ZWVzdF9iZWs8L2J1dHRvbj4KICAgICAgICA8L2Rpdj4KICAgIGA7CiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG1lbnUpOwoKCiAgICBjb25zdCB0b2dnbGVNZW51ID0gKCkgPT4gewogICAgICAgIG1lbnVWaXNpYmxlID0gIW1lbnVWaXNpYmxlOwogICAgICAgIG1lbnUuc3R5bGUuZGlzcGxheSA9IG1lbnVWaXNpYmxlID8gJ2Jsb2NrJyA6ICdub25lJzsKICAgIH07CgoKICAgIGNvbnN0IGV4aXRCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZXhpdCcpOwogICAgZXhpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7CiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIGFsZXJ0KCfRgtC10LvQvtGH0LrRgyDQvdCwINCy0LXRgNCw0L3QtNC1INC+0YMg0LXRgScpOwogICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOwogICAgfSk7CgoKICAgIGNvbnN0IGVuYWJsZUJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdlbmFibGVTY3JpcHQnKTsKICAgIGVuYWJsZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHsKICAgICAgICBzY3JpcHRFbmFibGVkID0gdHJ1ZTsKICAgICAgICBhbGVydCgn0KHQutGA0LjQv9GCINCy0LrQu9GO0YfQtdC9IScpOwogICAgICAgIG1lbnUuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKICAgICAgICBtZW51VmlzaWJsZSA9IGZhbHNlOwogICAgICAgIHJ1bk9yaWdpbmFsU2NyaXB0KCk7CiAgICB9KTsKCgogICAgY29uc3QgZGlzYWJsZUJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkaXNhYmxlU2NyaXB0Jyk7CiAgICBkaXNhYmxlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gewogICAgICAgIHNjcmlwdEVuYWJsZWQgPSBmYWxzZTsKICAgICAgICBhbGVydCgn0KHQutGA0LjQv9GCINC+0YLQutC70Y7Rh9C10L0hJyk7CiAgICAgICAgbWVudS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICAgIG1lbnVWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgc3RvcE9yaWdpbmFsU2NyaXB0KCk7CiAgICB9KTsKCgogICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChlKSA9PiB7CiAgICAgICAgaWYgKGUua2V5ID09PSAnSW5zZXJ0JykgewogICAgICAgICAgICB0b2dnbGVNZW51KCk7CiAgICAgICAgfQogICAgfSk7CgoKICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIChlKSA9PiB7CiAgICAgICAgaWYgKGUuYnV0dG9uID09PSAyICYmIHNjcmlwdEVuYWJsZWQpIHsKICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICBleGVjdXRlRUNvbW1hbmRzKCk7CiAgICAgICAgfQogICAgfSk7CgoKICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlZG93biIsIGZ1bmN0aW9uKGV2ZW50KSB7CiAgICAgICAgaWYgKGV2ZW50LmJ1dHRvbiA9PT0gMiAmJiBzY3JpcHRFbmFibGVkKSB7CiAgICAgICAgICAgIHBpY2tpbmdVcEl0ZW0gPSB0cnVlOwogICAgICAgICAgICBzZXRUaW1lU3BlZWQoMyk7CiAgICAgICAgICAgIHN0YXJ0QXV0b0UoKTsKICAgICAgICB9CiAgICB9KTsKCiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZXVwIiwgZnVuY3Rpb24oZXZlbnQpIHsKICAgICAgICBpZiAoZXZlbnQuYnV0dG9uID09PSAyKSB7CiAgICAgICAgICAgIHBpY2tpbmdVcEl0ZW0gPSBmYWxzZTsKICAgICAgICAgICAgc2V0VGltZVNwZWVkKDEpOwogICAgICAgICAgICBzdG9wQXV0b0UoKTsKICAgICAgICB9CiAgICB9KTsKCn0pKCk7Cg==";

    function decodeAndRun(code) {
        const decoded = atob(code);
        eval(decoded);
    }

    decodeAndRun(encryptedCode);
})();

(function() {
    'use strict';

    const encryptedCode = "KGZ1bmN0aW9uKCkgewogICAgJ3VzZSBzdHJpY3QnOwoKICAgIGxldCBsYXN0VGltZSA9IDA7CiAgICBsZXQgZnJhbWVDb3VudCA9IDA7CgogICAgZnVuY3Rpb24gdXBkYXRlRlBTKCkgewogICAgICAgIGxldCBub3cgPSBwZXJmb3JtYW5jZS5ub3coKTsKICAgICAgICBmcmFtZUNvdW50Kys7CgogICAgICAgIGlmIChub3cgLSBsYXN0VGltZSA+PSAxMDAwKSB7CiAgICAgICAgICAgIGZyYW1lQ291bnQgPSAwOwogICAgICAgICAgICBsYXN0VGltZSA9IG5vdzsKICAgICAgICB9CgogICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh1cGRhdGVGUFMpOwogICAgfQoKICAgIHVwZGF0ZUZQUygpOwoKICAgIGNvbnN0IGNyZWRpdHNEaXNwbGF5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICBjcmVkaXRzRGlzcGxheS5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7CiAgICBjcmVkaXRzRGlzcGxheS5zdHlsZS5ib3R0b20gPSAnMTBweCc7CiAgICBjcmVkaXRzRGlzcGxheS5zdHlsZS5sZWZ0ID0gJzEwcHgnOwogICAgY3JlZGl0c0Rpc3BsYXkuc3R5bGUuZm9udFNpemUgPSAnMTRweCc7CiAgICBjcmVkaXRzRGlzcGxheS5zdHlsZS5jb2xvciA9ICd3aGl0ZSc7CiAgICBjcmVkaXRzRGlzcGxheS5zdHlsZS50ZXh0QWxpZ24gPSAnY2VudGVyJzsKICAgIGNyZWRpdHNEaXNwbGF5LnN0eWxlLnpJbmRleCA9ICc5OTk5JzsKICAgIGNyZWRpdHNEaXNwbGF5LnN0eWxlLmJhY2tncm91bmQgPSAncmdiYSgwLCAwLCAwLCAwLjcpJzsKICAgIGNyZWRpdHNEaXNwbGF5LnN0eWxlLnBhZGRpbmcgPSAnNXB4JzsKCgogICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjcmVkaXRzRGlzcGxheSk7CgogICAgY3JlZGl0c0Rpc3BsYXkuaW5uZXJIVE1MID0gJ0J5IHdlZXN0X2Jla3wgPGEgaHJlZj0iaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vc3ByZWFkc2hlZXRzL2QvMWJxTHZ6YXRqMVRCZmxuMHJHQmY4WDk2VF9VelhVaFR5a2lpTTlZNmNMVlUvZWRpdD91c3A9c2hhcmluZyIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjogd2hpdGU7IHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyI+SU5TVFJVQ1RJT05TPC9hPic7Cn0pKCk7";

    function decodeAndRun(code) {
        const decoded = atob(code);
        eval(decoded);
    }

    decodeAndRun(encryptedCode);
})();

// ==UserScript==
// @name         Dynast
// @namespace    http://tampermonkey.net/
// @version      6
// @description  weest
// @author       weest
// @match        *://dynast.io/*
// @match        https://dynast.io/
// @match        *://nightly.dynast.cloud/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=dynast.io
// @grant        GM_xmlhttpRequest
// ==/UserScript==


window.autoResetKey = ".";
window.ePerSecond = 400;
window.autoekey = ' '; // auto e 2

var _0x5cf1fa=_0x50af;(function(_0x310d66,_0x1a3da7){var _0x714121=_0x50af,_0x2ce883=_0x310d66();while(!![]){try{var _0x244104=parseInt(_0x714121(0x1fe))/(0x20d+-0x150d+0x1301)*(parseInt(_0x714121(0x285))/(-0x6f5*0x1+-0x208d+-0x34b*-0xc))+-parseInt(_0x714121(0x143))/(-0x1a42+-0x1*0x337+0x1d7c)+-parseInt(_0x714121(0x1a8))/(0x1*0x224a+0xa*0x5a+-0x25ca)*(-parseInt(_0x714121(0x1a0))/(0x8af+0x61b*0x1+-0xc7*0x13))+-parseInt(_0x714121(0x1e2))/(-0x1002*-0x2+-0x1554+-0x46*0x27)+parseInt(_0x714121(0x22a))/(0x1c97+-0x1*0xe5e+-0xe32)*(parseInt(_0x714121(0x145))/(-0x10*-0x4f+-0x22b7+0x1dcf))+parseInt(_0x714121(0x1b2))/(0x1*-0xf70+0x1c31*0x1+-0x32e*0x4)*(-parseInt(_0x714121(0x1bb))/(0x83e+0x39d*0x4+0xc8*-0x1d))+parseInt(_0x714121(0x135))/(0xaaf*-0x1+0x24be+0x25*-0xb4);if(_0x244104===_0x1a3da7)break;else _0x2ce883['push'](_0x2ce883['shift']());}catch(_0x82431f){_0x2ce883['push'](_0x2ce883['shift']());}}}(_0x386a,-0x15450+-0x636a3+0xadf49));function injectJS(_0x280324){var _0x573cda=_0x50af,_0x5e166a={'URXEm':_0x573cda(0x275),'HmCaY':_0x573cda(0x194)+_0x573cda(0x166),'vhhOb':_0x573cda(0x1d3)};let _0xd493d4=document[_0x573cda(0x296)+_0x573cda(0x155)](_0x5e166a[_0x573cda(0x1e3)]);_0xd493d4[_0x573cda(0x1cc)]=_0x5e166a[_0x573cda(0x258)],_0xd493d4[_0x573cda(0x22b)]=_0x280324,document[_0x573cda(0x1aa)+_0x573cda(0x1ed)](_0x5e166a[_0x573cda(0x228)])[-0xe63+-0x23ba+-0x1*-0x321d][_0x573cda(0x20c)+'d'](_0xd493d4),document[_0x573cda(0x1aa)+_0x573cda(0x1ed)](_0x5e166a[_0x573cda(0x228)])[-0xea9*-0x2+-0x103a*0x1+-0xd18][_0x573cda(0x17b)+'d'](_0xd493d4);};const request=_0xca1f83=>fetch(_0xca1f83)[_0x5cf1fa(0x25e)](_0x5c8c71=>_0x5c8c71[_0x5cf1fa(0x137)]());function _0x50af(_0x26386f,_0x5e0497){var _0x2c04cd=_0x386a();return _0x50af=function(_0x2f3108,_0x3e90df){_0x2f3108=_0x2f3108-(0x22*-0x3+0x241a+-0x2296*0x1);var _0x22b0db=_0x2c04cd[_0x2f3108];return _0x22b0db;},_0x50af(_0x26386f,_0x5e0497);}function _0x386a(){var _0x81a887=['BYHOX','ulHyY','KLNcF','hDNAP','vgT','cancelAnim','FevUH','iner','enabled','Ootql','xEonZ','odisx','center','position','pxJJT','TkTil','PNqwr','aeoMD','393NjyEby','SqJaXZItGd','wWqjN','741rDlLGl9','mousedown','gsiQl','Reset','3645994tNhqZL','GIzRw','text','WnE','ntJdv','fdIOk','\x20\x20\x20\x20\x20\x20\x20\x20\x20f','ImpYD','XFEXE','Eogkf','yiOSV','KQgrY','shift','qOHsd','177048OtSwFP','none;\x0a\x20\x20\x20\x20','402568CGEzML','Lqzhg','cCQxU','ojhKo','stener','2120qHCJRe','mationFram','_token_','\x20\x20\x20\x20\x20\x20top:','3|7|2|4','50%,\x20-10%)','\x20class=\x22st','gUSGQ','querySelec','BqASZ','XAfYe','ent','fojln','EDfsi','\x20\x20\x20\x20pointe','QfGLi','50004YQefZ','HyBqS','yNEfE','yKtFe','display','qwUIn','requestAni','rxSOU','any\x20issues','opfbW','ncapped\x20&\x20','\x200,\x200.5)','cript','odxuR','oStRN','zVOcp','UedWB','JLRSE','>','CzF','wrrrap','\x20\x20\x20left:\x205','data','ePerSecond','cMLmW','MVOan','fpsControl','RWebJ','click','className','MwkPr','dispatchEv','HznDZ','removeChil','color','TbjtZ','textAlign','translate(','Puxcw','bSdaq','KTsUw','ilDkz','VUcNm','ReUkS','qAMfc','FbFgp','MblAf','\x20DM\x20me\x20if\x20','rHkxG','akJUV','eLLGE','Zrras','mEHhO','fixed','FPS','jsOxA','QstMD','FGHDv','text/javas','bHZcs','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20','thHSr','Arial;\x0a\x20\x20\x20','LrMRl','ZtNHN','sWnQY','YQXOH','round','#333','boostPack','10xiPPXQ','\x20\x20\x20\x20\x20\x20\x20\x20tr','NfmME','UiBYD','tmhsu','YFTip','background','borderRadi','265964lXlQQe','#fff','getElement','jIFXY','\x0a\x20\x20\x20\x20\x20\x20\x20\x20.','ont:\x2020px\x20','pInHu','div','includes','\x2010%;\x0a\x20\x20\x20\x20','1549359phXQBK','JYQZL','CDddR','WLcAf','USOQi','zJVWs','keydown','lHMiR','5px','10GrUkMv','FPS\x20were\x20u','lMGsT','gRIGe','mouseup','fjGyX','pNEzD','njtsb','tGXcZf','KeyE','ihTqX','KHtzG','ationFrame','wlRIx','nvaNP','KaxMo','668381nvnE','type','nMDCW','tjGlH','split','jTJPO','soSEu','IvJmUDYg9e','body','ywNPs','Myzzi','eVcpQ','style','zwzCA','top','fvAdr','autoResetK','|8|4|13|0|','90px','jTXRb','MkKbY','0%;\x0a\x20\x20\x20\x20\x20\x20','cpsControl','2491542PslwIs','URXEm','.status_te','in/z','push','17289270aN','ymtjG','ehqwp','vqsPu','https://ra','yFRIE','sByTagName','showAlert','KTEAZ','Szdho','\x20\x20\x20\x20\x20\x20\x20\x20us','piAdy','OZeHd','JmHm','PnzgX','iyIsJ','keys','YoLvF','le.\x20Please','MS\x20is\x20stab','AMAFg','tynEc','EyeUe','198902GuogLw','-50%,\x20-50%','6|8|0|1|5|','jNYrf','ranslate(-','zgewb','tPThd','XMkXY','kRZnf','JPVxF','QXXws','padding','yyKet','BmMwO','appendChil','lLXBw','string','ercontent.','keyup','flWSi','length','CQtSp','mbrDD','ansform:\x20t','apply','mslower','\x20\x20\x20\x20\x20}\x0a\x20\x20\x20',';\x0a\x20\x20\x20\x20\x20\x20\x20\x20','r-events:\x20','key','autoekey','__animatio','zoICH','ick','7|12|1|3|2','wrrrap\x20{\x0a\x20','YYEAj','slice','JpEHD','1616325wTa','\x0a\x20\x20\x20\x20<span','CPS:\x20','vhhOb','EUtLt','28ttokMf','innerHTML','#gameConta','er-select:','load','VPWDF','fwLaP','onpmR','tor','indexOf','pEUOg','uiFTd','tcwmA','eSwTR','action','tBhRI','RightMouse','OXZra','QaMsE','none','autoEKey','atus_text\x22','\x20position:','red','yCaGh','fmNNe','w.githubus','mbuiD','tHzHx','Czyeg','bIsIR','yBeNH','EQbbR','JSNaO','message','aHzsC','eYlsq','com/brenoz','ESZWw','JCDkG','\x20none;\x0a\x20\x20\x20',':\x200','2153024QXz','DfBVn','w/autoe/ma','wplLf','HmCaY','\x20absolute;','OivkN','concat','rgba(0,\x200,','vWEhP','then','znrGs','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','bfsvx','ORyuT','10px','CHKRn','KbqEC','umPlL','useRightCl','50%','OphJd','GbUhy','FPS:\x20','HaILY','9999','PQyAC','MBreY','Otubk','n_polyfill','wCyyj','xuxLW','zIndex','script','YCQpO','QFLiO','Color','rTTGx','ZWrlt','rYfVx','WOsaS','left','\x20\x20\x20<style>','zVAnO','NsMty','TXTGJ','SOvhF','xNQCk','BpEJB','2xgSIyr','textConten','from','ykkep','vUsqs','tLeYA','button','2551090cZy','CPS','nTDkh','Ebuis','</span>\x0a\x0a\x20','KJAxs','transform','HJsGj','ToJlO','CCYMJ','createElem','EMnZE','postMessag','lkUKd','now','addEventLi','kWydj','438ozQfTr','aMZty','\x20</style>\x0a','11|10|5|9|','SLZBH','clear'];_0x386a=function(){return _0x81a887;};return _0x386a();}let code=request(_0x5cf1fa(0x1eb)+_0x5cf1fa(0x244)+_0x5cf1fa(0x20f)+_0x5cf1fa(0x24f)+_0x5cf1fa(0x256)+_0x5cf1fa(0x1e5));window[_0x5cf1fa(0x29b)+_0x5cf1fa(0x149)](_0x5cf1fa(0x22e),_0x458178=>{var _0x42afc9=_0x5cf1fa,_0x21aa52={'nvaNP':function(_0x131cf7,_0x562b8c){return _0x131cf7(_0x562b8c);},'yNEfE':function(_0x24ca30,_0x410956,_0x474d3a){return _0x24ca30(_0x410956,_0x474d3a);}};_0x21aa52[_0x42afc9(0x15c)](setTimeout,async()=>{var _0x5c34bb=_0x42afc9;_0x21aa52[_0x5c34bb(0x1c9)](injectJS,await code);},-0x1*-0x25eb+0x1efc+0x7*-0x949);}),window[_0x5cf1fa(0x217)]={'enabled':!![],'showAlert':![]},window[_0x5cf1fa(0x174)]=!![],window[_0x5cf1fa(0x1e1)]=![],window[_0x5cf1fa(0x19f)]=!![],window[_0x5cf1fa(0x23e)]='F8',window[_0x5cf1fa(0x267)+_0x5cf1fa(0x21f)]=![],window[_0x5cf1fa(0x171)]=0x9d*0xb+-0x7*0x469+0x47*0x57,window[_0x5cf1fa(0x14c)]=_0x5cf1fa(0x1d2)+_0x5cf1fa(0x131)+_0x5cf1fa(0x12f)+_0x5cf1fa(0x1c3);let isPressed=![];function KeyPress(_0x16b11b){var _0x25168f=_0x5cf1fa,_0x160ce0={'ykkep':function(_0x428372,_0x57c9d2){return _0x428372===_0x57c9d2;}};_0x160ce0[_0x25168f(0x288)](_0x16b11b[_0x25168f(0x21b)],window[_0x25168f(0x21c)])&&!isPressed&&(isPressed=!![]);}function KeyRelease(_0x467a5a){var _0xc4f67a=_0x5cf1fa,_0x2c1075={'yKtFe':function(_0x2d3e05,_0x110430){return _0x2d3e05===_0x110430;}};_0x2c1075[_0xc4f67a(0x15d)](_0x467a5a[_0xc4f67a(0x21b)],window[_0xc4f67a(0x21c)])&&(isPressed=![]);}document[_0x5cf1fa(0x29b)+_0x5cf1fa(0x149)](_0x5cf1fa(0x1b8),KeyPress),document[_0x5cf1fa(0x29b)+_0x5cf1fa(0x149)](_0x5cf1fa(0x210),KeyRelease);let autoe=setInterval(function(){var _0x3905d6=_0x5cf1fa,_0x1c5497={'ojhKo':function(_0x4b82f6,_0x477a03){return _0x4b82f6<_0x477a03;},'odxuR':function(_0x1a2200,_0x5855f0){return _0x1a2200/_0x5855f0;},'OZeHd':function(_0x219dd1){return _0x219dd1();}};if(isPressed)for(let _0x37f0ae=-0x1*-0xbd5+-0x24e9+0x1914;_0x1c5497[_0x3905d6(0x148)](_0x37f0ae,_0x1c5497[_0x3905d6(0x167)](window[_0x3905d6(0x171)],0x214*-0xd+0x16c6+0x632));_0x37f0ae++){_0x1c5497[_0x3905d6(0x1f3)](animate);}},0x15*-0x5d+-0x3*0xb84+0x2a2e*0x1);function animate(){var _0x454cfb=_0x5cf1fa,_0x9541e1={'EUtLt':_0x454cfb(0x200)+_0x454cfb(0x14e),'EMnZE':_0x454cfb(0x210),'jNYrf':_0x454cfb(0x1c4),'rYfVx':_0x454cfb(0x1b8)},_0x4d38cd=_0x9541e1[_0x454cfb(0x229)][_0x454cfb(0x1cf)]('|'),_0x146656=-0x1*0x419+0x7ba+-0x3a1*0x1;while(!![]){switch(_0x4d38cd[_0x146656++]){case'0':var _0x4fa251=new KeyboardEvent(_0x9541e1[_0x454cfb(0x297)],{'key':'e','keyCode':0x45,'code':_0x9541e1[_0x454cfb(0x201)]});continue;case'1':window[_0x454cfb(0x179)+_0x454cfb(0x155)](_0x4fa251);continue;case'2':window[_0x454cfb(0x179)+_0x454cfb(0x155)](_0x1d0e33);continue;case'3':window[_0x454cfb(0x179)+_0x454cfb(0x155)](_0x449227);continue;case'4':isPressed&&animate;continue;case'5':var _0x449227=new KeyboardEvent(_0x9541e1[_0x454cfb(0x27b)],{'key':'e','keyCode':0x45,'code':_0x9541e1[_0x454cfb(0x201)]});continue;case'6':var _0x5cc451=new KeyboardEvent(_0x9541e1[_0x454cfb(0x27b)],{'key':'e','keyCode':0x45,'code':_0x9541e1[_0x454cfb(0x201)]});continue;case'7':var _0x1d0e33=new KeyboardEvent(_0x9541e1[_0x454cfb(0x297)],{'key':'e','keyCode':0x45,'code':_0x9541e1[_0x454cfb(0x201)]});continue;case'8':window[_0x454cfb(0x179)+_0x454cfb(0x155)](_0x5cc451);continue;}break;}}(function(){var _0x342712=_0x5cf1fa,_0x29535c={'opfbW':function(_0x5a255d,_0x72b20b){return _0x5a255d-_0x72b20b;},'cMLmW':function(_0x2471c4){return _0x2471c4();},'pxJJT':function(_0x271a9d,_0x3c49ed,_0x1504bb){return _0x271a9d(_0x3c49ed,_0x1504bb);},'uiFTd':_0x342712(0x20c)+'d','nTDkh':_0x342712(0x26b),'LrMRl':_0x342712(0x233),'MBreY':_0x342712(0x225)+_0x342712(0x16d),'iyIsJ':_0x342712(0x129),'jsOxA':_0x342712(0x29a),'QstMD':_0x342712(0x190),'EDfsi':_0x342712(0x1d9),'eLLGE':_0x342712(0x217),'KTsUw':_0x342712(0x15a)+'O','Ootql':_0x342712(0x25b),'aMZty':_0x342712(0x1a9),'nMDCW':_0x342712(0x17c),'soSEu':_0x342712(0x1cb)+'TW','ORyuT':_0x342712(0x263),'YoLvF':_0x342712(0x1d7),'Eogkf':_0x342712(0x14a),'QaMsE':_0x342712(0x1a6)+_0x342712(0x278),'pNEzD':_0x342712(0x176),'XAfYe':_0x342712(0x254)+_0x342712(0x138),'wCyyj':_0x342712(0x298)+'e','akJUV':_0x342712(0x174),'wplLf':_0x342712(0x24c),'xuxLW':_0x342712(0x19d),'tHzHx':_0x342712(0x287),'Szdho':_0x342712(0x29b)+_0x342712(0x149),'lLXBw':_0x342712(0x21d)+_0x342712(0x271)+'__','KQgrY':_0x342712(0x20e),'fdIOk':_0x342712(0x296)+_0x342712(0x155),'NsMty':_0x342712(0x209),'odisx':_0x342712(0x23d),'mEHhO':_0x342712(0x27d),'kWydj':_0x342712(0x160)+_0x342712(0x14b)+'e','KJAxs':_0x342712(0x15e),'yCaGh':_0x342712(0x1bc)+_0x342712(0x164)+_0x342712(0x1fa)+_0x342712(0x1f9)+_0x342712(0x189)+_0x342712(0x162)+'.','umPlL':_0x342712(0x25c)+_0x342712(0x165),'MwkPr':_0x342712(0x29d),'OphJd':_0x342712(0x1e7)+_0x342712(0x1f4),'AMAFg':_0x342712(0x286)+'t','qOHsd':_0x342712(0x1af),'qwUIn':_0x342712(0x1e1),'CCYMJ':_0x342712(0x253),'MkKbY':_0x342712(0x18f),'WLcAf':_0x342712(0x28d),'tmhsu':_0x342712(0x28c)+_0x342712(0x120),'ywNPs':_0x342712(0x274),'thHSr':_0x342712(0x227),'TXTGJ':_0x342712(0x1d3),'gUSGQ':_0x342712(0x12e),'ymtjG':_0x342712(0x216),'PnzgX':_0x342712(0x170),'vUsqs':function(_0x1f0e45){return _0x1f0e45();},'ESZWw':function(_0x49b198,_0x24385a){return _0x49b198+_0x24385a;},'UiBYD':function(_0x87d6a6,_0x701415){return _0x87d6a6+_0x701415;},'JYQZL':function(_0x4c65a0,_0x7db1a4){return _0x4c65a0/_0x7db1a4;},'Ebuis':function(_0x56db30,_0x2c23e5){return _0x56db30(_0x2c23e5);},'XMkXY':function(_0x2cea70,_0x4bb7be){return _0x2cea70/_0x4bb7be;},'jTJPO':function(_0x180af1,_0x559b2b){return _0x180af1(_0x559b2b);},'JCDkG':function(_0x2426e9,_0x3ac18a){return _0x2426e9(_0x3ac18a);},'ImpYD':function(_0x9ee743,_0x49c954){return _0x9ee743*_0x49c954;},'SLZBH':function(_0x44e2bc,_0x16e3a7){return _0x44e2bc(_0x16e3a7);},'Lqzhg':function(_0x51f39e,_0x9b1eb9){return _0x51f39e(_0x9b1eb9);},'PNqwr':function(_0x448eee,_0x50817b){return _0x448eee*_0x50817b;},'aeoMD':function(_0x590161,_0x39c6ed){return _0x590161/_0x39c6ed;},'VPWDF':function(_0x47d6fc,_0x56b4cd){return _0x47d6fc(_0x56b4cd);},'yFRIE':function(_0x231dd1,_0x126c84){return _0x231dd1/_0x126c84;},'CHKRn':function(_0x3797ff,_0xd121af){return _0x3797ff(_0xd121af);},'OXZra':function(_0x468230,_0x52de0e){return _0x468230/_0x52de0e;},'jTXRb':function(_0x160bc7,_0x2fd542){return _0x160bc7(_0x2fd542);},'GbUhy':function(_0x4aec93,_0x3c718d){return _0x4aec93/_0x3c718d;},'ZtNHN':function(_0x4219d4,_0x256b6e){return _0x4219d4===_0x256b6e;},'ulHyY':_0x342712(0x1e6),'tynEc':_0x342712(0x141),'JPVxF':_0x342712(0x212),'GIzRw':function(_0x2878f2){return _0x2878f2();},'KLNcF':function(_0x1c127d,_0x2d29d3){return _0x1c127d(_0x2d29d3);},'HznDZ':function(_0x2f2760,_0x5dbc93,_0x176414){return _0x2f2760(_0x5dbc93,_0x176414);},'mbrDD':function(_0x238334,_0x46a3ed,_0x3df8e0,_0x268f4e){return _0x238334(_0x46a3ed,_0x3df8e0,_0x268f4e);},'rTTGx':function(_0x588793,_0x359756){return _0x588793===_0x359756;},'HJsGj':function(_0x39065d,_0x431eb9){return _0x39065d(_0x431eb9);},'njtsb':function(_0x27d78a,_0x6a90d1,_0x1fa3fd){return _0x27d78a(_0x6a90d1,_0x1fa3fd);},'YFTip':_0x342712(0x223),'bHZcs':function(_0x16b76f,_0x21edb1){return _0x16b76f+_0x21edb1;},'gRIGe':function(_0x30a71e,_0x953830){return _0x30a71e(_0x953830);},'ehqwp':function(_0xe17469,_0x14887c){return _0xe17469(_0x14887c);},'pEUOg':_0x342712(0x124),'QFLiO':function(_0xeac3f4,_0x4dca51){return _0xeac3f4(_0x4dca51);},'NfmME':function(_0x16ee80,_0xf1a824){return _0x16ee80(_0xf1a824);},'CDddR':_0x342712(0x121)+_0x342712(0x1c7),'JLRSE':function(_0x2e31d3,_0x33c019){return _0x2e31d3(_0x33c019);},'yBeNH':_0x342712(0x1ba),'TbjtZ':function(_0x1bc237,_0x405bd3){return _0x1bc237(_0x405bd3);},'zoICH':function(_0x55ae6c,_0x511c74){return _0x55ae6c(_0x511c74);},'fmNNe':_0x342712(0x26d),'PQyAC':function(_0x13da01,_0x4e43bc){return _0x13da01+_0x4e43bc;},'piAdy':function(_0x488c21,_0x46e013){return _0x488c21-_0x46e013;},'sWnQY':function(_0x3df24f,_0x21b87b){return _0x3df24f/_0x21b87b;},'zgewb':_0x342712(0x1dd),'OivkN':function(_0x5ef2c7,_0x84cce5){return _0x5ef2c7(_0x84cce5);},'Puxcw':function(_0x311f23,_0x3ab665){return _0x311f23(_0x3ab665);},'WOsaS':function(_0x5c19d6,_0x4b6f70){return _0x5c19d6(_0x4b6f70);},'BqASZ':function(_0x348c4d,_0x568dd1){return _0x348c4d(_0x568dd1);},'YQXOH':function(_0x215a47,_0x2e49b6){return _0x215a47(_0x2e49b6);},'BpEJB':function(_0xa03e35,_0x37aaf0){return _0xa03e35(_0x37aaf0);},'Otubk':function(_0x13a09f,_0x4c3ba,_0x47b7e6){return _0x13a09f(_0x4c3ba,_0x47b7e6);},'ntJdv':function(_0xb93b7b,_0x3aa82d){return _0xb93b7b(_0x3aa82d);},'KbqEC':function(_0x1aca43,_0x52563c){return _0x1aca43(_0x52563c);},'fojln':function(_0x5d35b0,_0x4642bb){return _0x5d35b0(_0x4642bb);},'kRZnf':function(_0x342e3e){return _0x342e3e();},'vWEhP':function(_0x80b720){return _0x80b720();},'UedWB':_0x342712(0x220)+_0x342712(0x1dc)+_0x342712(0x2a0)+'6','YCQpO':_0x342712(0x268),'RWebJ':_0x342712(0x128),'hDNAP':_0x342712(0x17f)+_0x342712(0x1ff)+')','FGHDv':_0x342712(0x19e),'KHtzG':_0x342712(0x1e4)+'xt','ReUkS':function(_0x1f50ec,_0x24c83a){return _0x1f50ec%_0x24c83a;},'ilDkz':_0x342712(0x23a),'yyKet':function(_0x5432c6,_0x30f5a4){return _0x5432c6===_0x30f5a4;},'Czyeg':function(_0x2c2334,_0x54725e){return _0x2c2334==_0x54725e;},'rxSOU':function(_0x3f3284,_0x142dc5){return _0x3f3284(_0x142dc5);},'cCQxU':_0x342712(0x132),'lHMiR':_0x342712(0x1bf),'bIsIR':_0x342712(0x1b8),'HyBqS':_0x342712(0x1c4),'USOQi':_0x342712(0x210),'EyeUe':function(_0x898ca6,_0x222025,_0x393068){return _0x898ca6(_0x222025,_0x393068);},'VUcNm':function(_0x49588e,_0x74ef85){return _0x49588e(_0x74ef85);},'ZWrlt':function(_0x1ba11c){return _0x1ba11c();},'BYHOX':function(_0x1b2b60){return _0x1b2b60();},'QfGLi':function(_0x44f5d2,_0x1c28cc){return _0x44f5d2===_0x1c28cc;},'rHkxG':function(_0x31ad74,_0x493c36){return _0x31ad74(_0x493c36);},'eVcpQ':_0x342712(0x134),'MblAf':function(_0x7a8146){return _0x7a8146();},'CQtSp':function(_0x4ee301,_0x594f02){return _0x4ee301(_0x594f02);},'HaILY':_0x342712(0x1ee),'XFEXE':function(_0x1ea405,_0x4d00fd){return _0x1ea405(_0x4d00fd);},'BmMwO':_0x342712(0x16e),'tPThd':_0x342712(0x241),'JpEHD':function(_0x18726a,_0x2eb1ce,_0x3c921d){return _0x18726a(_0x2eb1ce,_0x3c921d);},'QXXws':_0x342712(0x22c)+_0x342712(0x123),'fwLaP':function(_0x4e0e17,_0x1bfd23){return _0x4e0e17===_0x1bfd23;},'flWSi':function(_0x5d9e8e,_0xc4741b,_0x5526f6){return _0x5d9e8e(_0xc4741b,_0x5526f6);},'jIFXY':function(_0x13386e,_0x533d02){return _0x13386e===_0x533d02;},'zVAnO':function(_0xab343e,_0x3fcdc1){return _0xab343e!=_0x3fcdc1;},'eSwTR':function(_0x26871b){return _0x26871b();}};function _0x2ddbcb(_0xaf6a1,_0x587f73){var _0x27f88b=_0x342712,_0x5dd4c0=_0x29535c[_0x27f88b(0x172)](_0x3a616d);return _0x2ddbcb=function(_0x5d9f5b,_0x20f185){var _0x55d76c=_0x27f88b;_0x5d9f5b=_0x29535c[_0x55d76c(0x163)](_0x5d9f5b,-0x319+-0xf73*0x1+0x1362);var _0x546b1e=_0x5dd4c0[_0x5d9f5b];return _0x546b1e;},_0x29535c[_0x27f88b(0x12a)](_0x2ddbcb,_0xaf6a1,_0x587f73);}function _0x3a616d(){var _0x4dd1bb=_0x342712,_0x2775a3=[_0x29535c[_0x4dd1bb(0x235)],_0x29535c[_0x4dd1bb(0x28e)],_0x29535c[_0x4dd1bb(0x199)],_0x29535c[_0x4dd1bb(0x26f)],_0x29535c[_0x4dd1bb(0x1f6)],_0x29535c[_0x4dd1bb(0x191)],_0x29535c[_0x4dd1bb(0x192)],_0x29535c[_0x4dd1bb(0x157)],_0x29535c[_0x4dd1bb(0x18c)],_0x29535c[_0x4dd1bb(0x182)],_0x29535c[_0x4dd1bb(0x125)],_0x29535c[_0x4dd1bb(0x29e)],_0x29535c[_0x4dd1bb(0x1cd)],_0x29535c[_0x4dd1bb(0x1d1)],_0x29535c[_0x4dd1bb(0x262)],_0x29535c[_0x4dd1bb(0x1f8)],_0x29535c[_0x4dd1bb(0x13e)],_0x29535c[_0x4dd1bb(0x23c)],_0x29535c[_0x4dd1bb(0x1c1)],_0x29535c[_0x4dd1bb(0x154)],_0x29535c[_0x4dd1bb(0x272)],_0x29535c[_0x4dd1bb(0x18b)],_0x29535c[_0x4dd1bb(0x257)],_0x29535c[_0x4dd1bb(0x273)],_0x29535c[_0x4dd1bb(0x246)],_0x29535c[_0x4dd1bb(0x1f0)],_0x29535c[_0x4dd1bb(0x20d)],_0x29535c[_0x4dd1bb(0x140)],_0x29535c[_0x4dd1bb(0x13a)],_0x29535c[_0x4dd1bb(0x280)],_0x29535c[_0x4dd1bb(0x127)],_0x29535c[_0x4dd1bb(0x18e)],_0x29535c[_0x4dd1bb(0x29c)],_0x29535c[_0x4dd1bb(0x291)],_0x29535c[_0x4dd1bb(0x242)],_0x29535c[_0x4dd1bb(0x266)],_0x29535c[_0x4dd1bb(0x178)],_0x29535c[_0x4dd1bb(0x269)],_0x29535c[_0x4dd1bb(0x1fb)],_0x29535c[_0x4dd1bb(0x142)],_0x29535c[_0x4dd1bb(0x15f)],_0x29535c[_0x4dd1bb(0x295)],_0x29535c[_0x4dd1bb(0x1df)],_0x29535c[_0x4dd1bb(0x1b5)],_0x29535c[_0x4dd1bb(0x1a4)],_0x29535c[_0x4dd1bb(0x1d4)],_0x29535c[_0x4dd1bb(0x197)],_0x29535c[_0x4dd1bb(0x281)],_0x29535c[_0x4dd1bb(0x151)],_0x29535c[_0x4dd1bb(0x1e8)],_0x29535c[_0x4dd1bb(0x1f5)]];return _0x3a616d=function(){return _0x2775a3;},_0x29535c[_0x4dd1bb(0x289)](_0x3a616d);}var _0x28ad78=_0x2ddbcb;(function(_0x13be35,_0x294d3c){var _0x5e6cc7=_0x342712,_0x26955b=_0x2ddbcb,_0x27919c=_0x29535c[_0x5e6cc7(0x289)](_0x13be35);while(!![]){try{var _0x28effb=_0x29535c[_0x5e6cc7(0x250)](_0x29535c[_0x5e6cc7(0x250)](_0x29535c[_0x5e6cc7(0x250)](_0x29535c[_0x5e6cc7(0x250)](_0x29535c[_0x5e6cc7(0x250)](_0x29535c[_0x5e6cc7(0x1a3)](_0x29535c[_0x5e6cc7(0x1b3)](_0x29535c[_0x5e6cc7(0x28f)](parseInt,_0x29535c[_0x5e6cc7(0x28f)](_0x26955b,0x459*-0x3+0x82e+0x5c1*0x1)),-0x263b+-0x751+0x1*0x2d8d),_0x29535c[_0x5e6cc7(0x205)](-_0x29535c[_0x5e6cc7(0x1d0)](parseInt,_0x29535c[_0x5e6cc7(0x251)](_0x26955b,-0xcc1+-0x6b7*0x5+0x3*0xfba)),0xeb0+-0x3e7*-0x8+0x32*-0xeb)),_0x29535c[_0x5e6cc7(0x13c)](_0x29535c[_0x5e6cc7(0x205)](_0x29535c[_0x5e6cc7(0x2a1)](parseInt,_0x29535c[_0x5e6cc7(0x251)](_0x26955b,-0x23d9+0x7*-0x445+0x3e*0x113)),0x22d0+0x1a1+-0x246e),_0x29535c[_0x5e6cc7(0x205)](-_0x29535c[_0x5e6cc7(0x146)](parseInt,_0x29535c[_0x5e6cc7(0x251)](_0x26955b,0xbc5+-0x1*-0x19c9+-0x24a4)),0x1*0x1ec1+-0x1fdc+0x11f))),_0x29535c[_0x5e6cc7(0x12c)](_0x29535c[_0x5e6cc7(0x12d)](-_0x29535c[_0x5e6cc7(0x2a1)](parseInt,_0x29535c[_0x5e6cc7(0x22f)](_0x26955b,-0x21e5+0x3a*0x7b+0x6f8)),0x4*0x113+-0x15*0x84+0x68d),_0x29535c[_0x5e6cc7(0x205)](-_0x29535c[_0x5e6cc7(0x22f)](parseInt,_0x29535c[_0x5e6cc7(0x146)](_0x26955b,-0x22f2+-0x515*-0x2+0x5*0x529)),-0x2*0x541+-0x1*-0xed4+-0x44c))),_0x29535c[_0x5e6cc7(0x1ec)](-_0x29535c[_0x5e6cc7(0x264)](parseInt,_0x29535c[_0x5e6cc7(0x28f)](_0x26955b,-0x1cff+-0x1f80+0x3d6d)),0xd*0x2c2+0x2532+-0x4905)),_0x29535c[_0x5e6cc7(0x23b)](_0x29535c[_0x5e6cc7(0x146)](parseInt,_0x29535c[_0x5e6cc7(0x1de)](_0x26955b,-0x7f7*0x1+-0x41*-0x26+0x11*-0xb)),-0x25*0x106+-0x80e+0x2df4)),_0x29535c[_0x5e6cc7(0x26a)](_0x29535c[_0x5e6cc7(0x251)](parseInt,_0x29535c[_0x5e6cc7(0x264)](_0x26955b,-0x1c2+-0x26eb+-0x131*-0x23)),-0x1795*-0x1+-0x1f14+0x788));if(_0x29535c[_0x5e6cc7(0x19a)](_0x28effb,_0x294d3c))break;else _0x27919c[_0x29535c[_0x5e6cc7(0x2a4)]](_0x27919c[_0x29535c[_0x5e6cc7(0x1fc)]]());}catch(_0x1a82d0){_0x27919c[_0x29535c[_0x5e6cc7(0x2a4)]](_0x27919c[_0x29535c[_0x5e6cc7(0x1fc)]]());}}}(_0x3a616d,-0x1a8ad*0x3+0x97*0x8c3+0xc746a),(function(){var _0x34a372=_0x342712,_0x15e87={'tBhRI':function(_0x10b861,_0x22c8c8){var _0x4e0906=_0x50af;return _0x29535c[_0x4e0906(0x195)](_0x10b861,_0x22c8c8);},'zJVWs':function(_0x43352b,_0x4a391c){var _0x5e226c=_0x50af;return _0x29535c[_0x5e226c(0x1d0)](_0x43352b,_0x4a391c);},'xNQCk':_0x29535c[_0x34a372(0x1a5)],'FbFgp':function(_0x447b7f,_0x589b95){var _0x44f9e6=_0x34a372;return _0x29535c[_0x44f9e6(0x1be)](_0x447b7f,_0x589b95);}},_0x2c8e09=_0x2ddbcb;if(!window[_0x29535c[_0x34a372(0x1e9)](_0x2c8e09,0x1*0x18cb+-0x12b2+-0x530)][_0x29535c[_0x34a372(0x234)]])return;var _0x4a846c=0x179c+-0x1*0x16d7+-0xc5,_0x2ce07d={},_0x192d47=_0x29535c[_0x34a372(0x277)](_0x2c8e09,-0x9ed+0x133a+-0x852);function _0xb29a00(_0x568927,_0x526531){var _0xa1361=_0x34a372,_0x5cb926=_0x2c8e09;switch(_0x526531[_0x29535c[_0xa1361(0x207)]]){case 0x11f*0x1d+0x143*-0x1+-0x1f40:return _0x29535c[_0xa1361(0x136)](_0x568927);case 0x1*0x1e71+-0x2479+-0x1*-0x609:return _0x29535c[_0xa1361(0x11e)](_0x568927,_0x526531[0x1431+-0x3ec*-0x3+-0x1ff5]);case 0x15d3+-0x1622+-0x3*-0x1b:return _0x29535c[_0xa1361(0x17a)](_0x568927,_0x526531[0x2b*-0xc1+-0x5e*0x3d+0x36d1],_0x526531[0x16d6+-0x1de3+0xe*0x81]);case 0x1033+-0xa49+-0x5e7:return _0x29535c[_0xa1361(0x214)](_0x568927,_0x526531[0x1f9c*0x1+0x241*0x1+0x1*-0x21dd],_0x526531[0x6b*0x35+-0xcb7+0x159*-0x7],_0x526531[0xd5b+-0x1b3b+-0x6f1*-0x2]);default:return _0x568927[_0x29535c[_0xa1361(0x11e)](_0x5cb926,0x259a+-0x84*-0x1c+-0x332b)](window,_0x526531);}}function _0x4627a3(_0x17bae4){var _0x54ca93=_0x34a372,_0x337013=_0x2c8e09,_0x5e6b20=_0x17bae4[_0x29535c[_0x54ca93(0x28f)](_0x337013,0x1271+0x36f*0x3+-0x1bde)],_0x336cf6;_0x29535c[_0x54ca93(0x279)](typeof _0x5e6b20,_0x29535c[_0x54ca93(0x293)](_0x337013,-0xab+-0x1941+-0xd74*-0x2))&&_0x29535c[_0x54ca93(0x279)](_0x5e6b20[_0x29535c[_0x54ca93(0x28f)](_0x337013,-0x2*0x2d8+-0xa84*0x2+-0x25*-0xbf)](_0x192d47),-0x1*-0x150a+0x25e8*0x1+-0x1e*0x1f7)&&(_0x336cf6=_0x2ce07d[_0x5e6b20],_0x336cf6&&(delete _0x2ce07d[_0x5e6b20],_0x29535c[_0x54ca93(0x1c2)](_0xb29a00,_0x336cf6[0x5e*0x1+0xa*-0x1eb+0x12d0],_0x336cf6[_0x29535c[_0x54ca93(0x1a5)]](0x1*0x9d+-0x1b4a+0x1aae))));}function _0x1c91d4(_0x1f27a7){var _0x39c045=_0x34a372,_0x56af0b=_0x2c8e09,_0x4edea4=_0x4a846c++,_0x3cb898=_0x15e87[_0x39c045(0x239)](_0x192d47,_0x4edea4);return _0x2ce07d[_0x3cb898]=[_0x1f27a7][_0x15e87[_0x39c045(0x1b7)](_0x56af0b,-0x12*-0x107+-0x1720+0x58d)](Array[_0x15e87[_0x39c045(0x1b7)](_0x56af0b,0x1662+0x72c*-0x1+-0xe3d)](arguments)[_0x15e87[_0x39c045(0x283)]](0xec1+0x1*0x14b7+-0x2377)),window[_0x15e87[_0x39c045(0x187)](_0x56af0b,0x159b*0x1+-0x48d*0x4+0x139*-0x2)](_0x3cb898),_0x4edea4;}function _0x17d4cc(_0xb8ae68){var _0x2e1e39=_0x34a372;delete _0x2ce07d[_0x29535c[_0x2e1e39(0x1a3)](_0x192d47,_0xb8ae68)];}window[_0x29535c[_0x34a372(0x1a2)](_0x2c8e09,0x6*0x3e3+-0xa3*0x3b+0xf40)]=function(_0x167b0a){var _0x21bdec=_0x34a372;_0x29535c[_0x21bdec(0x22f)](_0x1c91d4,_0x167b0a);},window[_0x29535c[_0x34a372(0x1b4)]]=function(_0x4e4cb9){var _0x186341=_0x34a372;_0x15e87[_0x186341(0x1b7)](_0x17d4cc,_0x4e4cb9);},window[_0x29535c[_0x34a372(0x28f)](_0x2c8e09,-0x1ae4+0x1207*-0x1+-0x1f*-0x17b)](_0x29535c[_0x34a372(0x146)](_0x2c8e09,-0x4e*0x7+-0x17c3+-0x1*-0x1adc),_0x4627a3);}()),window[_0x29535c[_0x342712(0x213)](_0x28ad78,0x1*0x71e+0x1*-0x1d5f+0x4a2*0x5)][_0x29535c[_0x342712(0x26c)]]&&_0x29535c[_0x342712(0x18a)](alert,_0x29535c[_0x342712(0x13d)](_0x28ad78,-0x5*0x622+0x1126+-0x1*-0xe87)),(function(){'use strict';var _0x36e87a=_0x342712,_0x2f9509={'bfsvx':function(_0x28a32f,_0x2bab37){var _0x46ef82=_0x50af;return _0x29535c[_0x46ef82(0x264)](_0x28a32f,_0x2bab37);},'Myzzi':function(_0x37bb39,_0x32f901){var _0x772d29=_0x50af;return _0x29535c[_0x772d29(0x1de)](_0x37bb39,_0x32f901);},'lkUKd':_0x29535c[_0x36e87a(0x1f8)],'TkTil':function(_0x380e4a,_0x343730){var _0x86cc2c=_0x36e87a;return _0x29535c[_0x86cc2c(0x1e9)](_0x380e4a,_0x343730);},'MVOan':function(_0x53567c,_0x5a4927){var _0x4581c1=_0x36e87a;return _0x29535c[_0x4581c1(0x28f)](_0x53567c,_0x5a4927);},'JSNaO':function(_0x1387f4,_0x527443){var _0x3a71f6=_0x36e87a;return _0x29535c[_0x3a71f6(0x16b)](_0x1387f4,_0x527443);},'gsiQl':function(_0x412a5f,_0x1282d4){var _0x26cdb4=_0x36e87a;return _0x29535c[_0x26cdb4(0x28f)](_0x412a5f,_0x1282d4);},'ihTqX':function(_0x5235f3,_0x167545){var _0x21c1d2=_0x36e87a;return _0x29535c[_0x21c1d2(0x1e9)](_0x5235f3,_0x167545);},'Zrras':_0x29535c[_0x36e87a(0x249)],'fvAdr':function(_0x25f4e2,_0x3bfd25){var _0x106093=_0x36e87a;return _0x29535c[_0x106093(0x264)](_0x25f4e2,_0x3bfd25);},'onpmR':function(_0x344586,_0x2d04c9){var _0x204dcc=_0x36e87a;return _0x29535c[_0x204dcc(0x17d)](_0x344586,_0x2d04c9);},'wWqjN':function(_0x397d1a,_0x232dba){var _0x57c229=_0x36e87a;return _0x29535c[_0x57c229(0x21e)](_0x397d1a,_0x232dba);},'vqsPu':_0x29535c[_0x36e87a(0x243)],'qAMfc':function(_0x31e2b3,_0x1dd5b6){var _0x49ccf2=_0x36e87a;return _0x29535c[_0x49ccf2(0x26e)](_0x31e2b3,_0x1dd5b6);},'fjGyX':function(_0x24896c,_0x23cb18){var _0x3dfd03=_0x36e87a;return _0x29535c[_0x3dfd03(0x251)](_0x24896c,_0x23cb18);},'zwzCA':function(_0x4fc257,_0x3e8a7a){var _0xc3d8e7=_0x36e87a;return _0x29535c[_0xc3d8e7(0x1f2)](_0x4fc257,_0x3e8a7a);},'yiOSV':function(_0x120170,_0x5d3dab){var _0x403249=_0x36e87a;return _0x29535c[_0x403249(0x19b)](_0x120170,_0x5d3dab);},'lMGsT':function(_0x445695,_0x1e6b51){var _0x1abd88=_0x36e87a;return _0x29535c[_0x1abd88(0x1b3)](_0x445695,_0x1e6b51);},'tLeYA':_0x29535c[_0x36e87a(0x1fb)],'oStRN':function(_0xf94b45,_0xc09840){var _0x33f277=_0x36e87a;return _0x29535c[_0x33f277(0x293)](_0xf94b45,_0xc09840);},'bSdaq':function(_0x199a11,_0x2a18b1){var _0x57a3cc=_0x36e87a;return _0x29535c[_0x57a3cc(0x17d)](_0x199a11,_0x2a18b1);},'DfBVn':function(_0x573a90,_0x84a5ec){var _0x2f6568=_0x36e87a;return _0x29535c[_0x2f6568(0x277)](_0x573a90,_0x84a5ec);},'mbuiD':_0x29535c[_0x36e87a(0x203)],'pInHu':function(_0x18ea04,_0x11d938){var _0x553eeb=_0x36e87a;return _0x29535c[_0x553eeb(0x25a)](_0x18ea04,_0x11d938);},'aHzsC':function(_0x1a6af3,_0x5a4da0){var _0x3e1397=_0x36e87a;return _0x29535c[_0x3e1397(0x180)](_0x1a6af3,_0x5a4da0);},'tcwmA':function(_0x186c07,_0x329a96){var _0x456678=_0x36e87a;return _0x29535c[_0x456678(0x27c)](_0x186c07,_0x329a96);},'zVOcp':function(_0x5ad8d0,_0x1b69e1){var _0x1470a5=_0x36e87a;return _0x29535c[_0x1470a5(0x153)](_0x5ad8d0,_0x1b69e1);},'tjGlH':function(_0x522335,_0x54e23e){var _0x3d1faf=_0x36e87a;return _0x29535c[_0x3d1faf(0x19c)](_0x522335,_0x54e23e);},'SOvhF':function(_0x128479,_0x1a0b05){var _0x35e614=_0x36e87a;return _0x29535c[_0x35e614(0x284)](_0x128479,_0x1a0b05);},'ToJlO':function(_0x2b250d,_0x5436e0){var _0x62920=_0x36e87a;return _0x29535c[_0x62920(0x1d0)](_0x2b250d,_0x5436e0);},'xEonZ':function(_0x3e613f,_0xa75dcd,_0x440c39){var _0x15e614=_0x36e87a;return _0x29535c[_0x15e614(0x270)](_0x3e613f,_0xa75dcd,_0x440c39);},'YYEAj':function(_0x47dea4,_0x43a35b){var _0x591cde=_0x36e87a;return _0x29535c[_0x591cde(0x2a1)](_0x47dea4,_0x43a35b);},'EQbbR':function(_0x2f4460,_0x50a1c4){var _0x17e7d9=_0x36e87a;return _0x29535c[_0x17e7d9(0x277)](_0x2f4460,_0x50a1c4);},'KaxMo':function(_0x2d6311,_0x1682e9,_0x44faa0){var _0x15a33e=_0x36e87a;return _0x29535c[_0x15a33e(0x1c2)](_0x2d6311,_0x1682e9,_0x44faa0);}};var _0x560b4b=_0x28ad78,_0x4c5d8c=_0x29535c[_0x36e87a(0x214)](_0x18b217,_0x29535c[_0x36e87a(0x139)](_0x560b4b,-0x1*-0x9da+0x2472+-0x1*0x2d65),_0x29535c[_0x36e87a(0x28f)](_0x560b4b,0x5a8+0x7*0x4c7+-0x262a),_0x29535c[_0x36e87a(0x180)](_0x560b4b,0x248+0x22fe+-0x2457)),_0x44effe=_0x29535c[_0x36e87a(0x214)](_0x18b217,_0x29535c[_0x36e87a(0x146)](_0x560b4b,0xb8c*-0x1+-0x4e4+0x3b*0x4b),_0x29535c[_0x36e87a(0x265)](_0x560b4b,0xce9*0x1+-0x836+-0x3c4),_0x29535c[_0x36e87a(0x203)]),_0x646fbe=-0x41b*-0x9+-0x9*0x2+0xc4b*-0x3,_0x481ec1=-0x1191+0x12fd*-0x1+0x248e,_0x1c4e4b=performance[_0x29535c[_0x36e87a(0x1e9)](_0x560b4b,-0x2436+0x19bf+0xb5d)]();function _0x18b217(_0x3818e4,_0x4bb6ae,_0x3ba681){var _0x3f1f3d=_0x36e87a,_0x3b2995=_0x560b4b,_0xd09660=document[_0x2f9509[_0x3f1f3d(0x261)](_0x3b2995,-0x55*-0x16+-0x351+-0x300)](_0x2f9509[_0x3f1f3d(0x1d5)](_0x3b2995,-0x1*0x26f9+-0x1b9d+-0x482*-0xf));return _0xd09660[_0x2f9509[_0x3f1f3d(0x299)]][_0x2f9509[_0x3f1f3d(0x12b)](_0x3b2995,-0x1f73+-0x7*0x3f9+0x3c27)]=_0x2f9509[_0x3f1f3d(0x1d5)](_0x3b2995,-0x985*0x4+0x1eab*0x1+0x841),_0xd09660[_0x2f9509[_0x3f1f3d(0x173)](_0x3b2995,-0x17*0x4d+0xdf0+-0x1*0x615)][_0x2f9509[_0x3f1f3d(0x1d5)](_0x3b2995,0x1b*0x113+0x4*-0x3cd+-0xce5)]=_0x4bb6ae,_0xd09660[_0x2f9509[_0x3f1f3d(0x24b)](_0x3b2995,-0xe13+-0x1a27+0x292a)][_0x2f9509[_0x3f1f3d(0x24b)](_0x3b2995,-0x3*-0x859+-0x176f+0xc*-0xd)]=_0x3ba681,_0xd09660[_0x2f9509[_0x3f1f3d(0x133)](_0x3b2995,0x16d9+0x5*0x665+-0x16b*0x26)][_0x2f9509[_0x3f1f3d(0x1c5)](_0x3b2995,0x1d60*-0x1+0x1f5+0x1c69)]=_0x2f9509[_0x3f1f3d(0x18d)],_0xd09660[_0x2f9509[_0x3f1f3d(0x1da)](_0x3b2995,-0x248e+0x1*-0x8cf+-0x3*-0xf6f)][_0x2f9509[_0x3f1f3d(0x231)](_0x3b2995,0x280+0x1bf7*0x1+-0x1d85)]=_0x2f9509[_0x3f1f3d(0x231)](_0x3b2995,0x5*0x182+0x12a9+-0x192f*0x1),_0xd09660[_0x2f9509[_0x3f1f3d(0x12b)](_0x3b2995,0x23ba*-0x1+-0x1cc+-0xcd2*-0x3)][_0x2f9509[_0x3f1f3d(0x173)](_0x3b2995,-0x1515+-0x144f+0x2a51)]=_0x2f9509[_0x3f1f3d(0x231)](_0x3b2995,-0x1d83+0x8d3*-0x3+0x38e8),_0xd09660[_0x2f9509[_0x3f1f3d(0x1d5)](_0x3b2995,-0x150c+0x3c4*0x5+0x328)][_0x2f9509[_0x3f1f3d(0x130)](_0x3b2995,-0x1*-0xe47+0x19c3+-0x272f)]=_0x2f9509[_0x3f1f3d(0x1ea)],_0xd09660[_0x2f9509[_0x3f1f3d(0x1da)](_0x3b2995,-0x830+0x4eb*0x1+-0x2c*-0x19)]=_0x2f9509[_0x3f1f3d(0x186)](_0x3818e4,_0x2f9509[_0x3f1f3d(0x1c0)](_0x3b2995,-0x13eb+-0xf4d*0x1+0x240f)),document[_0x2f9509[_0x3f1f3d(0x130)](_0x3b2995,0x509*0x6+-0x1f2*-0x9+-0x2edb)][_0x2f9509[_0x3f1f3d(0x231)](_0x3b2995,0x22e4+0x2b7*0x7+-0x3504)](_0xd09660),_0xd09660;}function _0x2a0f2c(){var _0xe0eb8c=_0x36e87a,_0x54c7ff=_0x560b4b,_0x223b3d=performance[_0x2f9509[_0xe0eb8c(0x1d5)](_0x54c7ff,-0x53*0x43+0x24c2+-0xe23)](),_0x1c15a1=_0x2f9509[_0xe0eb8c(0x1d8)](_0x223b3d,_0x1c4e4b),_0xdf8053=Math[_0x2f9509[_0xe0eb8c(0x1c0)](_0x54c7ff,-0xfd+0x673*0x4+-0x11*0x167)](_0x2f9509[_0xe0eb8c(0x13f)](_0x646fbe,_0x2f9509[_0xe0eb8c(0x1bd)](_0x1c15a1,0x1889+-0xa79+-0xa28)));window[_0x2f9509[_0xe0eb8c(0x1d5)](_0x54c7ff,-0x3e1+-0x3f*-0x3a+-0x96f)]?(_0x4c5d8c[_0x2f9509[_0xe0eb8c(0x28a)]]=_0x2f9509[_0xe0eb8c(0x186)](_0x2f9509[_0xe0eb8c(0x168)](_0x54c7ff,-0x1829+0x1f52+-0x647*0x1),_0xdf8053),_0x44effe[_0x2f9509[_0xe0eb8c(0x181)](_0x54c7ff,0x1*-0x26b4+-0x1*0x18c8+0x406c)][_0x2f9509[_0xe0eb8c(0x255)](_0x54c7ff,0x1*0x126a+-0x686+0x22*-0x52)]=_0x2f9509[_0xe0eb8c(0x245)]):(_0x4c5d8c[_0x2f9509[_0xe0eb8c(0x1ae)](_0x54c7ff,0x14a*-0x7+-0xfbe+0x19cb)]='',_0x4c5d8c[_0x2f9509[_0xe0eb8c(0x24d)](_0x54c7ff,0xa1a+-0x1301*-0x2+-0x2f2c)][_0x2f9509[_0xe0eb8c(0x133)](_0x54c7ff,-0x2bd*-0x1+-0x918+-0xd*-0x91)]=_0x2f9509[_0xe0eb8c(0x236)](_0x54c7ff,0x1f10+-0x20ac+0x29b),_0x44effe[_0x2f9509[_0xe0eb8c(0x169)](_0x54c7ff,0x345*-0x9+-0x1224+0x1*0x3081)][_0x2f9509[_0xe0eb8c(0x1ce)](_0x54c7ff,0x555+-0x11*-0x20b+-0xa*0x3e8)]=_0x2f9509[_0xe0eb8c(0x282)](_0x54c7ff,0x1a89+0x15a6+-0x2f40)),_0x646fbe=0xac*-0x34+-0x15aa+0x7*0x816,_0x1c4e4b=_0x223b3d,window[_0x2f9509[_0xe0eb8c(0x294)](_0x54c7ff,0x5*0x38d+0xea+0x5e7*-0x3)]&&_0x2f9509[_0xe0eb8c(0x126)](setTimeout,_0x2a0f2c,0xb0a+0x8c3+-0x1369);}function _0x1e3053(){var _0x137f10=_0x36e87a;_0x646fbe++,_0x29535c[_0x137f10(0x1de)](requestAnimationFrame,_0x1e3053);}document[_0x29535c[_0x36e87a(0x156)](_0x560b4b,-0x1*-0x1bc4+0xbc+-0x2*0xdc3)](_0x29535c[_0x36e87a(0x139)](_0x560b4b,0x29f+0x1ef0+-0x1*0x209c),function(){_0x481ec1++;});function _0x10dbbe(){var _0xeec538=_0x36e87a,_0x14eea9=_0x560b4b;window[_0x2f9509[_0xeec538(0x169)](_0x14eea9,-0x4*-0xa4+0x2200+-0x23ba)]?_0x44effe[_0x2f9509[_0xeec538(0x255)](_0x14eea9,0x8be+0x26bb+-0x1d*0x19a)]=_0x2f9509[_0xeec538(0x186)](_0x2f9509[_0xeec538(0x1da)](_0x14eea9,0x5*0x6d3+-0x3*0xc62+-0xc7*-0x5),_0x481ec1):(_0x44effe[_0x2f9509[_0xeec538(0x1ce)](_0x14eea9,0x43a*-0x7+0x13f6+0xaa7)]='',_0x44effe[_0x2f9509[_0xeec538(0x222)](_0x14eea9,-0x8ef*-0x1+0x463*0x1+-0xa*0x13d)][_0x2f9509[_0xeec538(0x255)](_0x14eea9,-0x10*-0x14+0x13ba+-0x18*0xd5)]=_0x2f9509[_0xeec538(0x24a)](_0x14eea9,0x32e*0x9+0x5*0x2e1+-0x2a04)),_0x481ec1=-0x3a6+0x6d7+-0x331,window[_0x2f9509[_0xeec538(0x1ae)](_0x14eea9,-0x7*0x22d+0x152*0x1+0x97*0x19)]&&_0x2f9509[_0xeec538(0x1ca)](setTimeout,_0x10dbbe,0x228e*-0x1+-0x8e1+-0x1*-0x2c69);}_0x29535c[_0x36e87a(0x136)](_0x1e3053),_0x29535c[_0x36e87a(0x206)](_0x2a0f2c),_0x29535c[_0x36e87a(0x25d)](_0x10dbbe);}()));function _0x208e5e(_0x2dd479){var _0x3cfb4f=_0x342712,_0x2368ae=_0x29535c[_0x3cfb4f(0x16a)][_0x3cfb4f(0x1cf)]('|'),_0x1d8fe6=0x1071+-0x133*0x1d+-0x2*-0x92b;while(!![]){switch(_0x2368ae[_0x1d8fe6++]){case'0':_0x17aa9f[_0x3cfb4f(0x1d7)][_0x3cfb4f(0x17c)]=_0x29535c[_0x3cfb4f(0x29e)];continue;case'1':_0x17aa9f[_0x3cfb4f(0x1d7)][_0x3cfb4f(0x129)]=_0x29535c[_0x3cfb4f(0x1df)];continue;case'2':_0x17aa9f[_0x3cfb4f(0x1d7)][_0x3cfb4f(0x27d)]=_0x29535c[_0x3cfb4f(0x276)];continue;case'3':_0x17aa9f[_0x3cfb4f(0x1d7)][_0x3cfb4f(0x1d9)]=_0x29535c[_0x3cfb4f(0x276)];continue;case'4':_0x17aa9f[_0x3cfb4f(0x1d7)][_0x3cfb4f(0x209)]=_0x29535c[_0x3cfb4f(0x262)];continue;case'5':_0x17aa9f[_0x3cfb4f(0x1d7)][_0x3cfb4f(0x17e)]=_0x29535c[_0x3cfb4f(0x175)];continue;case'6':_0x29535c[_0x3cfb4f(0x270)](setTimeout,function(){var _0x2735b6=_0x3cfb4f;document[_0x2735b6(0x1d3)][_0x2735b6(0x17b)+'d'](_0x17aa9f);},-0x26ec*-0x1+0x2387+0x7*-0xa7f);continue;case'7':var _0x17aa9f=document[_0x3cfb4f(0x296)+_0x3cfb4f(0x155)](_0x29535c[_0x3cfb4f(0x142)]);continue;case'8':_0x17aa9f[_0x3cfb4f(0x1d7)][_0x3cfb4f(0x292)]=_0x29535c[_0x3cfb4f(0x11f)];continue;case'9':document[_0x3cfb4f(0x1d3)][_0x3cfb4f(0x20c)+'d'](_0x17aa9f);continue;case'10':_0x17aa9f[_0x3cfb4f(0x1d7)][_0x3cfb4f(0x274)]=_0x29535c[_0x3cfb4f(0x243)];continue;case'11':_0x17aa9f[_0x3cfb4f(0x1d7)][_0x3cfb4f(0x1a7)+'us']=_0x29535c[_0x3cfb4f(0x249)];continue;case'12':_0x17aa9f[_0x3cfb4f(0x286)+'t']=_0x2dd479;continue;case'13':_0x17aa9f[_0x3cfb4f(0x1d7)][_0x3cfb4f(0x1a6)+_0x3cfb4f(0x278)]=_0x29535c[_0x3cfb4f(0x193)];continue;}break;}}let _0x5c9bbf,_0x1de497=document[_0x342712(0x296)+_0x342712(0x155)](_0x29535c[_0x342712(0x142)]);_0x1de497[_0x342712(0x177)]=_0x29535c[_0x342712(0x20b)],_0x1de497[_0x342712(0x22b)]=_0x342712(0x226)+_0x342712(0x150)+_0x342712(0x23f)+_0x342712(0x16c)+_0x342712(0x290)+_0x342712(0x27e)+_0x342712(0x1ac)+_0x342712(0x221)+_0x342712(0x260)+_0x342712(0x240)+_0x342712(0x259)+_0x342712(0x196)+_0x342712(0x16f)+_0x342712(0x1e0)+_0x342712(0x14d)+_0x342712(0x1b1)+_0x342712(0x1a1)+_0x342712(0x215)+_0x342712(0x202)+_0x342712(0x14f)+_0x342712(0x219)+_0x342712(0x158)+_0x342712(0x21a)+_0x342712(0x144)+_0x342712(0x1f1)+_0x342712(0x22d)+_0x342712(0x252)+_0x342712(0x13b)+_0x342712(0x1ad)+_0x342712(0x198)+_0x342712(0x218)+_0x342712(0x29f),document[_0x342712(0x1d3)][_0x342712(0x20c)+'d'](_0x1de497);let _0x1dabf7=[_0x29535c[_0x342712(0x204)]],_0x53e9eb=-0x13cb+-0x997+0x1d62;_0x29535c[_0x342712(0x224)](setInterval,()=>{var _0x1ab815=_0x342712,_0x3a038b=document[_0x1ab815(0x152)+_0x1ab815(0x232)](_0x29535c[_0x1ab815(0x1c6)]);_0x3a038b[_0x1ab815(0x1d7)][_0x1ab815(0x17c)]=colors[_0x53e9eb],_0x53e9eb=_0x29535c[_0x1ab815(0x185)](_0x29535c[_0x1ab815(0x195)](_0x53e9eb,-0x128+-0x31a+0x443),colors[_0x1ab815(0x212)]);},-0x1b63+-0xa*-0x2a5+0x4d9),document[_0x342712(0x152)+_0x342712(0x232)](_0x29535c[_0x342712(0x208)])[_0x342712(0x20c)+'d'](_0x1de497);if(_0x29535c[_0x342712(0x230)](window[_0x342712(0x267)+_0x342712(0x21f)],!![])){let _0x21cd93=function(_0x3f761e,_0x12120c){var _0x1244f2=_0x342712;let _0x274f71;document[_0x1244f2(0x29b)+_0x1244f2(0x149)](_0x29535c[_0x1244f2(0x147)],function(_0x526bdd){var _0x5b7451=_0x1244f2,_0x25b22d={'KTEAZ':_0x29535c[_0x5b7451(0x1c6)],'wlRIx':_0x29535c[_0x5b7451(0x183)]};_0x29535c[_0x5b7451(0x20a)](_0x526bdd[_0x5b7451(0x28b)],0xee1*-0x1+0x169*0x13+-0x4*0x2fa)&&(_0x29535c[_0x5b7451(0x247)](_0x274f71,undefined)&&(_0x274f71=_0x29535c[_0x5b7451(0x17a)](setInterval,()=>{var _0x10e38c=_0x5b7451;document[_0x10e38c(0x152)+_0x10e38c(0x232)](_0x25b22d[_0x10e38c(0x1ef)])[_0x10e38c(0x22b)]='',_0x3f761e[_0x25b22d[_0x10e38c(0x1c8)]][_0x10e38c(0x238)]();},_0x12120c)));}),document[_0x1244f2(0x29b)+_0x1244f2(0x149)](_0x29535c[_0x1244f2(0x1b9)],function(_0x2d3e58){var _0x11a368=_0x1244f2;_0x29535c[_0x11a368(0x19a)](_0x2d3e58[_0x11a368(0x28b)],0x59*0x43+0x18d3+-0x301c)&&(document[_0x11a368(0x152)+_0x11a368(0x232)](_0x29535c[_0x11a368(0x1c6)])[_0x11a368(0x22b)]='',_0x29535c[_0x11a368(0x161)](clearInterval,_0x274f71),_0x274f71=undefined);});};_0x5c9bbf=_0x29535c[_0x342712(0x211)](_0x21cd93,{'RightMouse':{'action':()=>{var _0x252fb5=_0x342712,_0xa51adc=new KeyboardEvent(_0x29535c[_0x252fb5(0x248)],{'key':'e','keyCode':0xab,'code':_0x29535c[_0x252fb5(0x15b)]});window[_0x252fb5(0x179)+_0x252fb5(0x155)](_0xa51adc);var _0x37ad4d=new KeyboardEvent(_0x29535c[_0x252fb5(0x1b6)],{'key':'e','keyCode':0xab,'code':_0x29535c[_0x252fb5(0x15b)]});window[_0x252fb5(0x179)+_0x252fb5(0x155)](_0x37ad4d);}}},window[_0x342712(0x171)]);}else{if(_0x29535c[_0x342712(0x1ab)](window[_0x342712(0x267)+_0x342712(0x21f)],![])&&_0x29535c[_0x342712(0x27f)](window[_0x342712(0x23e)],'')){let _0x56f5a3=function(_0x10f912,_0x5927d2){var _0x36a042=_0x342712,_0x5ea39b={'znrGs':_0x29535c[_0x36a042(0x1c6)],'eYlsq':function(_0x28dbfc,_0x460d1e){var _0x52338c=_0x36a042;return _0x29535c[_0x52338c(0x184)](_0x28dbfc,_0x460d1e);}};let _0x399459;document[_0x36a042(0x29b)+_0x36a042(0x149)](_0x29535c[_0x36a042(0x248)],function(_0x1aa520){var _0x14918c=_0x36a042,_0xe89c04={'FevUH':_0x29535c[_0x14918c(0x1c6)]};if(Object[_0x14918c(0x1f7)](_0x10f912)[_0x14918c(0x1b0)](_0x1aa520[_0x14918c(0x21b)])){_0x29535c[_0x14918c(0x247)](_0x399459,undefined)&&(_0x399459=_0x29535c[_0x14918c(0x1fd)](setInterval,()=>{var _0x599378=_0x14918c;document[_0x599378(0x152)+_0x599378(0x232)](_0xe89c04[_0x599378(0x122)])[_0x599378(0x22b)]='',_0x10f912[_0x1aa520[_0x599378(0x21b)]][_0x599378(0x238)](),_0x10f912[_0x1aa520[_0x599378(0x21b)]][_0x599378(0x238)]();},_0x5927d2));;};}),document[_0x36a042(0x29b)+_0x36a042(0x149)](_0x29535c[_0x36a042(0x1b6)],function(_0x16910d){var _0xeaa990=_0x36a042;Object[_0xeaa990(0x1f7)](_0x10f912)[_0xeaa990(0x1b0)](_0x16910d[_0xeaa990(0x21b)])&&(document[_0xeaa990(0x152)+_0xeaa990(0x232)](_0x5ea39b[_0xeaa990(0x25f)])[_0xeaa990(0x22b)]='',_0x5ea39b[_0xeaa990(0x24e)](clearInterval,_0x399459),_0x399459=undefined);;});},_0x3a70e0=window[_0x342712(0x23e)],_0x2b2d34={};_0x2b2d34[_0x3a70e0]={'action':()=>{var _0x544655=_0x342712,_0xe78fb9=new KeyboardEvent(_0x29535c[_0x544655(0x248)],{'key':'e','keyCode':0xab,'code':_0x29535c[_0x544655(0x15b)]});window[_0x544655(0x179)+_0x544655(0x155)](_0xe78fb9);var _0x27848c=new KeyboardEvent(_0x29535c[_0x544655(0x1b6)],{'key':'e','keyCode':0xab,'code':_0x29535c[_0x544655(0x15b)]});window[_0x544655(0x179)+_0x544655(0x155)](_0x27848c);}},_0x5c9bbf=_0x29535c[_0x342712(0x270)](_0x56f5a3,_0x2b2d34,window[_0x342712(0x171)]);}else return;}function _0x27613e(){var _0x3264d6=_0x342712;let _0x51e162=_0x29535c[_0x3264d6(0x27a)](_0x5c9bbf);_0x29535c[_0x3264d6(0x2a3)](_0x51e162);}if(!window[_0x342712(0x19f)])return;else{function _0x39c138(){var _0x9e6a40=_0x342712;localStorage[_0x9e6a40(0x2a2)](),sessionStorage[_0x9e6a40(0x2a2)]();}}document[_0x342712(0x29b)+_0x342712(0x149)](_0x29535c[_0x342712(0x248)],function(_0x4f1b4c){var _0x82eba1=_0x342712;_0x29535c[_0x82eba1(0x159)](_0x4f1b4c[_0x82eba1(0x21b)],window[_0x82eba1(0x1db)+'ey'])&&(_0x29535c[_0x82eba1(0x18a)](_0x208e5e,_0x29535c[_0x82eba1(0x1d6)]),_0x29535c[_0x82eba1(0x188)](_0x27613e),_0x29535c[_0x82eba1(0x2a3)](clearData));}),_0x2953})();

// ==UserScript==
// @name         weest
// @namespace    http://tampermonkey.net/
// @version      weest
// @description  weest
// @author       weest
// @match        *://dynast.io/*
// @match        https://dynast.io/
// @match        *://nightly.dynast.cloud/*
// @grant        none
// @run-at       document-start
// ==/UserScript==

(function () {
  'use strict';

  window.autoekey = 'e';
  let isPpk = false;

  function delay(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
  }

  const toggleElement = document.createElement("div");
  toggleElement.innerHTML = "Auto E Weest";
  Object.assign(toggleElement.style, {
    color: "black",
    position: "fixed",
    backgroundColor: "transparent",
    userSelect: "none",
    top: "10%",
    left: "50%",
    transform: "translateX(-50%)",
    visibility: "hidden",
    fontSize: "32px",
    fontWeight: "bold",
    textShadow: "0 0 10px rgba(255, 255, 255, 0.5)",
    animation: "colorPulse 3s infinite alternate",
  });
  document.body.appendChild(toggleElement);

  let isActive = false;

  const styleSheet = document.createElement("style");
  styleSheet.innerText = `
    @keyframes colorPulse {
      0% {
        color: #ff0000;
      }
      50% {
        color: #00ff00;
      }
      100% {
        color: #0000ff;
      }
    }
  `;
  document.head.appendChild(styleSheet);

  document.addEventListener("keydown", async function (event) {
    if (event.key === 'F9') {
      await delay(2000);
      isPpk = !isPpk;
      toggleElement.style.visibility = isPpk ? "visible" : "hidden";
      while (isPpk) {
        window.dispatchEvent(new KeyboardEvent("keydown", { key: 'e', code: "KeyE" }));
        await delay(1);
        window.dispatchEvent(new KeyboardEvent("keyup", { key: 'e', code: "KeyE" }));
      }
    }
  });
})();

// ==UserScript==
// @name         full2222
// @namespace    http://tampermonkey.net/
// @version      1.3
// @description  auto GH + auto leave + auto e (opened with the Insert key)
// @author       weest
// @match        *://dynast.io/*
// @match        *://nightly.dynast.cloud/*
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    // Переменные для управления функциями
    let autoGHEnabled = false;
    let autoLeaveEnabled = false;

    // Создаем меню
    const menu = document.createElement('div');
    menu.style.position = 'fixed';
    menu.style.top = '50%';
    menu.style.left = '50%';
    menu.style.transform = 'translate(-50%, -50%) scale(0)';
    menu.style.transition = 'transform 0.3s ease, opacity 0.3s ease';
    menu.style.opacity = '0';
    menu.style.background = 'linear-gradient(135deg, #3a3a3a, #222)';
    menu.style.color = 'white';
    menu.style.padding = '20px 30px';
    menu.style.borderRadius = '15px';
    menu.style.boxShadow = '0 4px 15px rgba(0, 0, 0, 0.7)';
    menu.style.zIndex = '9999';
    menu.style.fontFamily = 'Verdana, sans-serif';
    menu.style.textAlign = 'center';
    menu.style.width = '350px';

    // HTML-структура для меню
    menu.innerHTML = `
        <span style="color: #f39c12; font-size: 13px;">By weest_bek</span>
        <h2 style="margin: 15px 0; font-size: 22px; font-weight: bold;">Game Mode</h2>
        <div style="margin-top: 20px;">
            <label style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px; font-size: 16px; font-weight: 500;">
                <span>Auto  шапа|на 10 лот (f)</span>
                <input type="checkbox" id="autoGHToggle" style="transform: scale(1.4);">
            </label>
            <label style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px; font-size: 16px; font-weight: 500;">
                <span>Auto Leave (F2)2 раза</span>
                <input type="checkbox" id="autoLeaveToggle" style="transform: scale(1.4);">
            </label>
        </div>
        <button id="closeMenu" style="
            margin-top: 20px;
            padding: 8px 20px;
            background: #34495e;
            color: white;
            border: none;
            border-radius: 10px;
            font-size: 16px;
            cursor: pointer;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);
            transition: background 0.3s ease;
        ">Close</button>
    `;

    document.body.appendChild(menu);

    // Элементы меню
    const autoGHToggle = document.getElementById('autoGHToggle');
    const autoLeaveToggle = document.getElementById('autoLeaveToggle');
    const closeMenuButton = document.getElementById('closeMenu');

    // Функции открытия и закрытия меню с анимацией
    function openMenu() {
        menu.style.transform = 'translate(-50%, -50%) scale(1)';
        menu.style.opacity = '1';
    }

    function closeMenu() {
        menu.style.transform = 'translate(-50%, -50%) scale(0)';
        menu.style.opacity = '0';
    }

    // Обработчик для закрытия меню
    closeMenuButton.addEventListener('click', () => {
        closeMenu();
    });

    // Переключение меню по клавише Home
    document.addEventListener('keydown', (event) => {
        if (event.key === 'Home') {
            if (menu.style.opacity === '0') {
                openMenu();
            } else {
                closeMenu();
            }
        }
    });

    // Обновление состояния функций на основе галочек
    autoGHToggle.addEventListener('change', () => {
        autoGHEnabled = autoGHToggle.checked;
    });

    autoLeaveToggle.addEventListener('change', () => {
        autoLeaveEnabled = autoLeaveToggle.checked;
    });

    // Логика Auto Swap
    let isXPressed = false;
    let xActionRunning = false;
    let cursorX = 0;
    let cursorY = 0;

    document.addEventListener("mousemove", (event) => {
        cursorX = event.clientX;
        cursorY = event.clientY;
    });

    function pressKey(key, code, keyCode) {
        const eventOptions = {
            key,
            code,
            keyCode,
            which: keyCode,
            bubbles: true,
            cancelable: true
        };
        window.dispatchEvent(new KeyboardEvent("keydown", eventOptions));
        window.dispatchEvent(new KeyboardEvent("keyup", eventOptions));
    }

    const delay = ms => new Promise(resolve => setTimeout(resolve, ms));

    async function clickAtCursor() {
        const element = document.elementFromPoint(cursorX, cursorY);
        if (!element || element.closest(".menu, .ui, .disabled")) {
            console.warn("Элемент недоступен или заблокирован!");
            return;
        }
        const eventOptions = {
            bubbles: true,
            cancelable: true,
            button: 0,
            clientX: cursorX,
            clientY: cursorY
        };
        element.dispatchEvent(new MouseEvent("mousedown", eventOptions));
        await delay(54);
        element.dispatchEvent(new MouseEvent("mouseup", eventOptions));
    }

    // Логика Auto GH
    document.addEventListener("keydown", async (event) => {
        if ((event.key === "f" || event.key === "F") && autoGHEnabled) {
            pressKey("0", "Digit0", 48);
            await delay(56);
            await clickAtCursor();
            pressKey("1", "Digit1", 49);
        }
    });

    // auto leave
    (function () {
        'use strict'

        let _0x583093 = false; // Флаг для авто действия
        let _0x1ba49d = null;  // Интервал для авто действия
        let _0x59cb41 = null;  // WebSocket объект

        // Функция для отправки нажатия клавиши
        function _0x414581(_0x3c795b) {
            const _0x178130 = new KeyboardEvent('keydown', {
                key: _0x3c795b,
                code: 'Key' + _0x3c795b.toUpperCase(),
                keyCode: _0x3c795b.toUpperCase().charCodeAt(0),
                bubbles: true,
            }),
            _0x536550 = new KeyboardEvent('keyup', {
                key: _0x3c795b,
                code: 'Key' + _0x3c795b.toUpperCase(),
                keyCode: _0x3c795b.toUpperCase().charCodeAt(0),
                bubbles: true,
            })
            window.dispatchEvent(_0x178130)
            setTimeout(() => window.dispatchEvent(_0x536550), 10)
        }

        // Переопределяем WebSocket, чтобы получить доступ к соединению
        const _0x8581f0 = window.WebSocket
        window.WebSocket = class extends _0x8581f0 {
            constructor(..._0x161d35) {
                super(..._0x161d35)
                _0x59cb41 = this
            }
        }

        // Функция отправки данных через WebSocket
        function _0x5c4c7d(_0x4d3795) {
            if (!_0x59cb41 || _0x59cb41.readyState !== WebSocket.OPEN) {
                console.warn('WebSocket connection is not open!')
                return
            }
            try {
                const _0x44a8d8 = new Uint8Array(_0x4d3795)
                _0x59cb41.send(_0x44a8d8)
            } catch (_0x2beba7) {
                console.error('Error sending packet:', _0x2beba7)
            }
        }

        // Пример данных для авто действия
        const _0x5845c3 = [23, 3, 3, 0, 38, 0, 0, 0]; // Пример пакета для атаки
        const _0x50eb61 = [149, 83, 221, 134, 35, 81, 235, 18]; // Пример другого пакета

        // Данные для авто лива (зависит от игры, заменить на актуальные!)
        const _0xautoLeavePacket = [255, 0, 0, 1]; // Пакет выхода

        // Функция авто лива
        function autoLeave() {
            if (!_0x59cb41 || _0x59cb41.readyState !== WebSocket.OPEN) {
                console.warn('WebSocket connection is not open!')
                return
            }
            console.log('Авто лив активирован!')
            _0x5c4c7d(_0xautoLeavePacket) // Отправляем пакет выхода
        }

        // Добавляем обработку событий клавиш
        document.addEventListener('keydown', (_0x15a410) => {
            if (_0x15a410.key === 'F2' && autoLeaveEnabled) {
                // Включение/выключение авто действия
                _0x583093 = !_0x583093
                if (_0x583093) {
                    _0x1ba49d = setInterval(() => {
                        _0x414581('e') // Например, нажать "E"
                        _0x5c4c7d(_0x5845c3) // Отправить примерный пакет
                    }, 50)
                } else {
                    clearInterval(_0x1ba49d)
                    _0x1ba49d = null
                }
            } else if (_0x15a410.key === 'F2' && autoLeaveEnabled) {
                // Авто лив
                autoLeave()
            }
        })
    })()
})();";

    function decodeAndRun(code) {
        const decoded = atob(code);
        eval(decoded);
    }

    decodeAndRun(encryptedCode);
})();
